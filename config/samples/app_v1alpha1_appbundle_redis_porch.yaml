apiVersion: app.example.com/v1alpha1
kind: AppBundle
metadata:
  name: redis-deployment
  namespace: default
  labels:
    app: redis
    deployment-method: porch
spec:
  # Controller creates PackageVariant, Porch deploys
  porchIntegration:
    enabled: true
    repository: mgmt  # Name of downstream Repository CR (not URL)
  
  groups:
    # Group 0: Infrastructure - Create namespace and basic config
    - name: infrastructure
      order: 0
      components:
        - name: redis-namespace
          order: 0
          template:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: redis
              labels:
                app: redis
                managed-by: appbundle-operator
        
        - name: redis-config
          order: 1
          template:
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: redis-configuration
              namespace: redis
            data:
              redis.conf: |
                # Redis configuration from AppBundle
                maxmemory 256mb
                maxmemory-policy allkeys-lru
                save 900 1
                save 300 10
                save 60 10000
    
    # Group 1: Redis Deployment - Deploy Redis using Porch package
    - name: redis-workload
      order: 1
      components:
        - name: redis-deployment
          order: 0
          # Controller creates PackageVariant and auto-discovers resources
          # No template needed - controller monitors all workload resources in package
          porchPackageRef:
            packageName: redis                      # Package name in repository
            repository: catalog-workloads-general   # Repository CR name
            namespace: default                      # Where PackageVariant is created
            revision: main                          # Git branch/tag
    
    # Group 2: Monitoring - Optional Redis monitoring
    - name: monitoring
      order: 2
      components:
        - name: redis-exporter
          order: 0
          template:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: redis-exporter
              namespace: redis
              labels:
                app: redis-exporter
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: redis-exporter
              template:
                metadata:
                  labels:
                    app: redis-exporter
                spec:
                  containers:
                  - name: redis-exporter
                    image: oliver006/redis_exporter:latest
                    ports:
                    - containerPort: 9121
                      name: metrics
                    env:
                    - name: REDIS_ADDR
                      value: "redis:6379"
                    resources:
                      requests:
                        cpu: 50m
                        memory: 64Mi
                      limits:
                        cpu: 100m
                        memory: 128Mi
        
        - name: exporter-service
          order: 1
          template:
            apiVersion: v1
            kind: Service
            metadata:
              name: redis-exporter
              namespace: redis
              labels:
                app: redis-exporter
            spec:
              type: ClusterIP
              selector:
                app: redis-exporter
              ports:
              - name: metrics
                port: 9121
                targetPort: 9121
                protocol: TCP

